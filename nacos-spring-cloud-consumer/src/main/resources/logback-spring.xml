<?xml version="1.0" encoding="UTF-8"?>

<!-- 级别从高到低 OFF 、 FATAL 、 ERROR 、 WARN 、 INFO 、 DEBUG 、 TRACE 、 ALL -->
<!-- 日志输出规则 根据当前ROOT 级别，日志输出时，级别高于root默认的级别时 会输出 -->
<!-- 以下 每个配置的 filter 是过滤掉输出文件里面，会出现高级别文件，依然出现低级别的日志信息，通过filter 过滤只记录本级别的日志 -->
<!-- scan 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。 -->
<!-- scanPeriod 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。 -->
<!-- debug 当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
<configuration scan="true" scanPeriod="30 seconds" debug="false">

<!--	<conversionRule conversionWord="myThread" converterClass="com.smk.consumer.util.MyThreadConvert" />-->
	<property name="APP_Name" value="consumer" />

	<!-- 动态日志级别 -->
	<jmxConfigurator />

	<property name="Log_Pattern" value="[%date{ISO8601}][%-5level][%30.30logger{10}-%method.%line]-%m%n" />
<!--	<property name="File_Pattern" value="./logs/%d{yyyyMMdd}" />-->
	<property name="File_Pattern" value="./logs/consumer/%d{yyyyMMdd}"/>
	<contextName>${APP_Name}</contextName>

	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>${Log_Pattern}</pattern>
			<charset>UTF-8</charset>
		</encoder>
	</appender>

	<appender name="root" class="ch.qos.logback.core.rolling.RollingFileAppender">
<!--		<file>./logs/root.log</file>-->
		<file>./logs/consumer/root.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
<!--			<fileNamePattern>${File_Pattern}/${APP_Name}/root.%i.log</fileNamePattern>-->
			<fileNamePattern>${File_Pattern}/root.%i.log</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>50MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<append>true</append>
		<encoder>
			<pattern>${Log_Pattern}</pattern>
			<charset>UTF-8</charset>
		</encoder>
	</appender>

	<!-- 异步输出 -->
	<appender name="ASYNC-INFO" class="ch.qos.logback.classic.AsyncAppender">
		<!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
		<discardingThreshold>0</discardingThreshold>
		<!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
		<queueSize>512</queueSize>
		<!-- 打印堆栈信息 -->
		<includeCallerData>true</includeCallerData>
		<!-- 添加附加的appender,最多只能添加一个 -->
		<appender-ref ref="root"/>
	</appender>

	<!-- addtivity，默认为true，将此loger的打印信息向上级传递； -->
	<!-- 没有设置appender，此loger本身不打印任何信息 -->
	<logger name="com" level="DEBUG" additivity="false">
		<appender-ref ref="ASYNC-INFO" />
		<appender-ref ref="STDOUT" />
	</logger>

	<!-- trace, debug, info, warn, error -->
	<root level="INFO">
		<appender-ref ref="ASYNC-INFO" />
		<appender-ref ref="STDOUT" />
	</root>
</configuration>